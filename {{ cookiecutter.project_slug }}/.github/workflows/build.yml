name: Build

on: 
  workflow_dispatch:
  push:
    branches: [ main ]
    tags:
    - '*'
  pull_request:
    branches: [ main ]

jobs:  
  test:
    name: Compile and run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Setup node environment
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Prepare environment
        run: .github/workflows/scripts/prepare_environment.sh

      - name: Compile contracts
        run: brownie compile --all
      - run: touch .env
      - run: .github/workflows/scripts/touch_gif_package_dotenv.sh
      - name: Execute tests
        run: brownie test -n auto
        
      - name: Install solhint linter
        run: npm install --global solhint
      - name: Run solhint linter
        run: solhint contracts/**/*.sol

  ## TODO enable for here on onwards this action when package upload to npm is required 
  ## (make sure that package.json is configured correctly before enabling)
  #     - name: Archive build artifacts
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: contracts
  #         path: |
  #           build

  # publish:
  #   name: Publish package to npmjs
  #   runs-on: ubuntu-latest
  #   needs: [test]
  #   # only run if tests successful
  #   if: ${{ github.ref != 'refs/heads/main' && contains(join(needs.*.result, ','), 'success') }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Download build artifacts
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: contracts
  #         path: build

  #     - name: Setup node environment
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18
  #         registry-url: 'https://registry.npmjs.org'

  #     - run: npm ci

  #     - name: Set build version identifier
  #       run: npm version "`npm version patch --no-git-tag-version`-`git rev-parse --short HEAD`" --no-git-tag-version

  #     - run: npm publish --tag next
  #       env:
  #         NODE_AUTH_TOKEN: ${{ secrets.NPMJS_ACCESS_TOKEN }}
  